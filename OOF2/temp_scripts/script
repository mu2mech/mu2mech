OOF.Windows.Graphics.New()  
OOF.PixelGroup.New(name='phase_1', microstructure='output_200.00.png') 
OOF.PixelGroup.New(name='phase_2', microstructure='output_200.00.png') 
OOF.Graphics_1.Toolbox.Pixel_Select.Burn(source='output_200.00.png:output_200.00.png', local_flammability=0.1, global_flammability=0.2, color_space_norm='L1', next_nearest=False, points=[Point(85,181)], shift=0, ctrl=0) 
OOF.PixelGroup.AddSelection(microstructure='output_200.00.png', group='phase_1') 
OOF.Graphics_1.Toolbox.Pixel_Select.Invert(source='output_200.00.png:output_200.00.png') 
OOF.PixelGroup.AddSelection(microstructure='output_200.00.png', group='phase_2') 
OOF.Material.New(name='phase_1_1000k', material_type='bulk') 
OOF.Material.New(name='phase_2_1000k', material_type='bulk') 
OOF.Property.Copy(property='Mechanical:Elasticity:Anisotropic:Cubic', new_name='phase_1') 
OOF.Property.Parametrize.Mechanical.Elasticity.Anisotropic.Cubic.phase_1(cijkl=CubicRank4TensorCij(c11=208,c12=148,c44=96)) 
OOF.Property.Copy(property='Orientation', new_name='phase_1') 
OOF.Property.Parametrize.Orientation.phase_1(angles=XYZ(phi=0,theta=0,psi=0)) 
OOF.Material.Add_property(name='phase_1_1000k', property='Orientation:phase_1') 
OOF.Material.Add_property(name='phase_1_1000k', property='Mechanical:Elasticity:Anisotropic:Cubic:phase_1') 
OOF.Property.Copy(property='Mechanical:Elasticity:Anisotropic:Cubic', new_name='phase_2') 
OOF.Property.Parametrize.Mechanical.Elasticity.Anisotropic.Cubic.phase_2(cijkl=CubicRank4TensorCij(c11=207,c12=149,c44=101)) 
OOF.Property.Copy(property='Orientation', new_name='phase_2') 
OOF.Property.Parametrize.Orientation.phase_2(angles=XYZ(phi=0,theta=0,psi=0)) 
OOF.Material.Add_property(name='phase_2_1000k', property='Orientation:phase_2') 
OOF.Material.Add_property(name='phase_2_1000k', property='Mechanical:Elasticity:Anisotropic:Cubic:phase_2') 
OOF.Material.Assign(material='phase_2_1000k', microstructure='output_200.00.png', pixels='phase_2') 
OOF.Material.Assign(material='phase_1_1000k', microstructure='output_200.00.png', pixels='phase_1') 
OOF.Skeleton.New(name='skeleton', microstructure='output_200.00.png', x_elements=10, y_elements=10, skeleton_geometry=QuadSkeleton(left_right_periodicity=True,top_bottom_periodicity=True)) 
OOF.ElementSelection.Select_by_Homogeneity(skeleton='output_200.00.png:skeleton', threshold=0.9) 
OOF.Skeleton.Modify(skeleton='output_200.00.png:skeleton', modifier=Refine(targets=CheckSelectedElements(),criterion=Unconditionally(),degree=Trisection(rule_set='conservative'),alpha=0.5)) 
OOF.ElementSelection.Select_by_Homogeneity(skeleton='output_200.00.png:skeleton', threshold=0.9) 
OOF.Skeleton.Modify(skeleton='output_200.00.png:skeleton', modifier=Refine(targets=CheckSelectedElements(),criterion=Unconditionally(),degree=Trisection(rule_set='conservative'),alpha=0.5)) 
OOF.ElementSelection.Select_by_Homogeneity(skeleton='output_200.00.png:skeleton', threshold=0.9) 
OOF.Skeleton.Modify(skeleton='output_200.00.png:skeleton', modifier=SnapNodes(targets=SnapSelected(),criterion=AverageEnergy(alpha=0.5))) 
OOF.ElementSelection.Select_by_Homogeneity(skeleton='output_200.00.png:skeleton', threshold=0.9) 
OOF.Skeleton.Modify(skeleton='output_200.00.png:skeleton', modifier=Anneal(targets=FiddleSelectedElements(),criterion=AverageEnergy(alpha=0.5),T=0.0,delta=1.0,iteration=FixedIteration(iterations=5))) 
OOF.Skeleton.Modify(skeleton='output_200.00.png:skeleton', modifier=Rationalize(targets=AllElements(),criterion=AverageEnergy(alpha=0.5),method=SpecificRationalization(rationalizers=[RemoveShortSide(ratio=5.0), QuadSplit(angle=150), RemoveBadTriangle(acute_angle=15,obtuse_angle=150)]))) 
OOF.Skeleton.Modify(skeleton='output_200.00.png:skeleton', modifier=FixIllegal()) 
OOF.Mesh.New(name='mesh', skeleton='output_200.00.png:skeleton', element_types=['D2_2', 'T3_3', 'Q4_4']) 
OOF.Subproblem.Field.Define(subproblem='output_200.00.png:skeleton:mesh:default', field=Displacement) 
OOF.Subproblem.Field.Activate(subproblem='output_200.00.png:skeleton:mesh:default', field=Displacement) 
OOF.Subproblem.Equation.Activate(subproblem='output_200.00.png:skeleton:mesh:default', equation=Force_Balance) 
OOF.Subproblem.Equation.Activate(subproblem='output_200.00.png:skeleton:mesh:default', equation=Plane_Stress) 
OOF.Mesh.Boundary_Conditions.New(name='bc1', mesh='output_200.00.png:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=-10),boundary='left')) 
OOF.Mesh.Boundary_Conditions.New(name='bc2', mesh='output_200.00.png:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=10),boundary='right')) 
OOF.Mesh.Scheduled_Output.New(mesh='output_200.00.png:skeleton:mesh', name=AutomaticName('GraphicsUpdate'), output=GraphicsUpdate()) 
OOF.Mesh.Scheduled_Output.Schedule.Set(mesh='output_200.00.png:skeleton:mesh', output=AutomaticName('GraphicsUpdate'), scheduletype=AbsoluteOutputSchedule(), schedule=Once(time=0.0)) 
OOF.Mesh.Scheduled_Output.New(mesh='output_200.00.png:skeleton:mesh', name=AutomaticName('Stress[xx]//Average'), output=BulkAnalysis(output_type='Scalar',data=getOutput('Flux:Component',component='xx',flux=Stress),operation=AverageOutput(),domain=EntireMesh(),sampling=ElementSampleSet(order=automatic))) 
OOF.Mesh.Scheduled_Output.Schedule.Set(mesh='output_200.00.png:skeleton:mesh', output=AutomaticName('Stress[xx]//Average'), scheduletype=AbsoluteOutputSchedule(), schedule=Once(time=0.0)) 
OOF.Mesh.Scheduled_Output.Destination.Set(mesh='output_200.00.png:skeleton:mesh', output=AutomaticName('Stress[xx]//Average'), destination=OutputStream(filename='/home/albert/Desktop/bbbb/bcn1_stress_xx ',mode='w')) 
OOF.Mesh.Scheduled_Output.New(mesh='output_200.00.png:skeleton:mesh', name=AutomaticName('Stress[yy]//Average'), output=BulkAnalysis(output_type='Scalar',data=getOutput('Flux:Component',component='yy',flux=Stress),operation=AverageOutput(),domain=EntireMesh(),sampling=ElementSampleSet(order=automatic))) 
OOF.Mesh.Scheduled_Output.Schedule.Set(mesh='output_200.00.png:skeleton:mesh', output=AutomaticName('Stress[yy]//Average'), scheduletype=AbsoluteOutputSchedule(), schedule=Once(time=0.0)) 
OOF.Mesh.Scheduled_Output.Destination.Set(mesh='output_200.00.png:skeleton:mesh', output=AutomaticName('Stress[yy]//Average'), destination=OutputStream(filename='/home/albert/Desktop/bbbb/bcn1_stress_yy ',mode='w')) 
OOF.Mesh.Scheduled_Output.New(mesh='output_200.00.png:skeleton:mesh', name=AutomaticName('Geometric Strain[xx]//Average'), output=BulkAnalysis(output_type='Scalar',data=getOutput('Strain:Component',component='xx',type=GeometricStrain()),operation=AverageOutput(),domain=EntireMesh(),sampling=ElementSampleSet(order=automatic))) 
OOF.Mesh.Scheduled_Output.Schedule.Set(mesh='output_200.00.png:skeleton:mesh', output=AutomaticName('Geometric Strain[xx]//Average'), scheduletype=AbsoluteOutputSchedule(), schedule=Once(time=0.0)) 
OOF.Mesh.Scheduled_Output.Destination.Set(mesh='output_200.00.png:skeleton:mesh', output=AutomaticName('Geometric Strain[xx]//Average'), destination=OutputStream(filename='/home/albert/Desktop/bbbb/bcn1_geom_strain_xx',mode='w')) 
OOF.Mesh.Scheduled_Output.New(mesh='output_200.00.png:skeleton:mesh', name=AutomaticName('Geometric Strain[yy]//Average'), output=BulkAnalysis(output_type='Scalar',data=getOutput('Strain:Component',component='yy',type=GeometricStrain()),operation=AverageOutput(),domain=EntireMesh(),sampling=ElementSampleSet(order=automatic))) 
OOF.Mesh.Scheduled_Output.Schedule.Set(mesh='output_200.00.png:skeleton:mesh', output=AutomaticName('Geometric Strain[yy]//Average'), scheduletype=AbsoluteOutputSchedule(), schedule=Once(time=0.0)) 
OOF.Mesh.Scheduled_Output.Destination.Set(mesh='output_200.00.png:skeleton:mesh', output=AutomaticName('Geometric Strain[yy]//Average'), destination=OutputStream(filename='/home/albert/Desktop/bbbb/bcn1_geom_strain_yy',mode='w')) 
OOF.Mesh.Scheduled_Output.New(mesh='output_200.00.png:skeleton:mesh', name=AutomaticName('Elastic Strain[xx]//Average'), output=BulkAnalysis(output_type='Scalar',data=getOutput('Strain:Component',component='xx',type=ElasticStrain()),operation=AverageOutput(),domain=EntireMesh(),sampling=ElementSampleSet(order=automatic))) 
OOF.Mesh.Scheduled_Output.Schedule.Set(mesh='output_200.00.png:skeleton:mesh', output=AutomaticName('Elastic Strain[xx]//Average'), scheduletype=AbsoluteOutputSchedule(), schedule=Once(time=0.0)) 
OOF.Mesh.Scheduled_Output.Destination.Set(mesh='output_200.00.png:skeleton:mesh', output=AutomaticName('Elastic Strain[xx]//Average'), destination=OutputStream(filename='/home/albert/Desktop/bbbb/bcn1_elastic_strain_xx',mode='w')) 
OOF.Mesh.Scheduled_Output.New(mesh='output_200.00.png:skeleton:mesh', name=AutomaticName('Elastic Strain[yy]//Average'), output=BulkAnalysis(output_type='Scalar',data=getOutput('Strain:Component',component='yy',type=ElasticStrain()),operation=AverageOutput(),domain=EntireMesh(),sampling=ElementSampleSet(order=automatic))) 
OOF.Mesh.Scheduled_Output.Schedule.Set(mesh='output_200.00.png:skeleton:mesh', output=AutomaticName('Elastic Strain[yy]//Average'), scheduletype=AbsoluteOutputSchedule(), schedule=Once(time=0.0)) 
OOF.Mesh.Scheduled_Output.Destination.Set(mesh='output_200.00.png:skeleton:mesh', output=AutomaticName('Elastic Strain[yy]//Average'), destination=OutputStream(filename='/home/albert/Desktop/bbbb/bcn1_elastic_strain_yy',mode='w')) 
OOF.File.Save.Mesh(filename='/home/albert/Desktop/bbbb/40_1000K_t2_512_x_dir_mesh_abaqus', mode='w', format='abaqus', mesh='output_200.00.png:skeleton:mesh') 
OOF.Subproblem.Set_Solver(subproblem='output_200.00.png:skeleton:mesh:default', solver_mode=BasicSolverMode(time_stepper=BasicStaticDriver(),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=10000))) 
OOF.Mesh.Set_Field_Initializer(mesh='output_200.00.png:skeleton:mesh', field=Displacement, initializer=ConstTwoVectorFieldInit(cx=0.0,cy=0.0)) 
OOF.Mesh.Apply_Field_Initializers(mesh='output_200.00.png:skeleton:mesh') 
OOF.Mesh.Solve(mesh='output_200.00.png:skeleton:mesh', endtime=0.0) 
exit()